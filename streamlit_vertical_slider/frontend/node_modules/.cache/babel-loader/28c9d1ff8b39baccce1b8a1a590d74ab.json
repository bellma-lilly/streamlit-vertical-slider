{"ast":null,"code":"var _jsxFileName = \"/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx\";\nimport { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport Box from '@material-ui/core/Box';\n// import Slider from '@material-ui/core/Slider'\n// import styled from '@material-ui/styles/styled'\n// import { createTheme } from '@material-ui/core/styles'\n// import Typography from '@material-ui/core/Typography' \n// import Grid from '@material-ui/core/Grid';\n\n// function valuetext(value: number) {\n//   return `${value}°C`;\n// }\n\n// class VerticalSlider extends StreamlitComponentBase {\n//   public state = { currentValue: 0 }\n//   public render = (): ReactNode => {\n//     const hMargin = 10\n//     const vMargin = 50\n\n//     const StyledSlider = styled(Slider)({\n//       margin: `${vMargin}px ${hMargin}px`,\n//       padding: \"5px 5px 5px 5px\",\n//       width: this.props.width - (hMargin),\n//       color: \"#29B5E8\",\n//       marks:{\n//         margin:\"10px 10px 10px 10px\"\n//       }\n//     });\n\n//     // function valueLabelFormat(value:number) {\n//     //   return options.findIndex(options) + 1;\n//     // }\n\n//     function createSteps(labels: string[]): any[] {\n//       return labels.map((label, index) => { return { value: index, label } })\n//     }\n\n//     const options = this.props.args[\"options\"]\n//     const step = this.props.args[\"step\"]\n//     const def = this.props.args[\"default\"]\n//     const min_val = this.props.args[\"min_value\"]\n//     const max_val = this.props.args[\"max_value\"]\n//     return (\n//       <Box sx={{ height: 150 }}>\n//         <StyledSlider \n//           orientation=\"vertical\"\n//           getAriaValueText={valuetext}\n//           defaultValue={def}\n//           aria-labelledby=\"continuous-slider\"\n//           step={step}\n//           min={min_val}\n//           max={max_val}\n//           //value={this.state.currentValue}\n//           valueLabelDisplay=\"on\"\n//           onDragEnter={(value) => {\n//             //this.setState({ currentValue: value })\n//             Streamlit.setComponentValue(value)\n//           }}\n//           disabled={this.props.disabled}\n//           marks={[{ value: Number(min_val) , label: String(min_val) }, { value:Number(max_val) , label: String(max_val)}]}\n//         />\n//       </Box>\n//     )\n\n//   }\n\n// }\n// export default withStreamlitConnection(VerticalSlider)\n\n//import React from 'react';\n\nimport Slider from '@material-ui/core/Slider';\nconst VerticalSlider = props => {\n  const {\n    label,\n    min_value,\n    max_value,\n    default_value,\n    step\n  } = props.args;\n  //const [value, setValue] = useState([default_value]);\n  useEffect(() => Streamlit.setFrameHeight());\n  const handleChange = (event, newValue) => {\n    Streamlit.setComponentValue(newValue);\n  };\n  const hMargin = 5;\n  const style = {\n    height: \"200px\",\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 50,\n    marginBottom: 50,\n    width: props.width - hMargin,\n    color: \"#29B5E8\",\n    marked: \"False\"\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: min_value,\n    step: step,\n    max: max_value,\n    defaultValue: default_value,\n    onChange: handleChange,\n    valueLabelDisplay: \"on\",\n    orientation: \"vertical\",\n    \"aria-labelledby\": \"continuous-slider\",\n    style: style,\n    ThumbComponent: \"span\",\n    marks: [{\n      value: Number(min_value),\n      label: String(min_value)\n    }, {\n      value: Number(max_value),\n      label: String(max_value)\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }));\n};\nexport default withStreamlitConnection(VerticalSlider);\n\n// export default function NonLinearSlider() {\n//   const [value, setValue] = React.useState<number | number[]>(1);\n\n//   const handleChange = (event: any, newValue: number | number[]) => {\n//     setValue(newValue)\n//     Streamlit.setComponentValue(newValue);\n//   };\n\n//     // const options = strea.args[\"options\"]\n//     // const step = props.args[\"step\"]\n//     // const def = props.args[\"default\"]\n//     // const min_val = props.args[\"min_value\"]\n//     const { label, minValue, maxValue, initialValue } = props.args;\n\n//   return (\n//       <Slider\n//         //value={value}\n//         min={1}\n//         step={1}\n//         max={100}\n//         defaultValue={50}\n//         onChange={handleChange}\n//         valueLabelDisplay=\"on\"\n//         orientation=\"vertical\"\n//         aria-labelledby=\"continuous-slider\"\n//         style={{ height:\"200px\", marginLeft:25, marginRight:25, marginTop:50, marginBottom:50, width: \"100px\",color: \"#29B5E8\",}}\n//         ThumbComponent=\"span\"\n//         marks={[{ value: Number(min_val) , label: String(min_val) }, { value:Number(max_val) , label: String(max_val)}]}\n//       />\n\n//   );\n// }","map":{"version":3,"names":["Streamlit","withStreamlitConnection","React","useEffect","Box","Slider","VerticalSlider","props","label","min_value","max_value","default_value","step","args","setFrameHeight","handleChange","event","newValue","setComponentValue","hMargin","style","height","marginLeft","marginRight","marginTop","marginBottom","width","color","marked","value","Number","String"],"sources":["/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx"],"sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useState,useEffect } from \"react\"\nimport Box from '@material-ui/core/Box'\n// import Slider from '@material-ui/core/Slider'\n// import styled from '@material-ui/styles/styled'\n// import { createTheme } from '@material-ui/core/styles'\n// import Typography from '@material-ui/core/Typography' \n// import Grid from '@material-ui/core/Grid';\n\n// function valuetext(value: number) {\n//   return `${value}°C`;\n// }\n\n\n\n// class VerticalSlider extends StreamlitComponentBase {\n//   public state = { currentValue: 0 }\n//   public render = (): ReactNode => {\n//     const hMargin = 10\n//     const vMargin = 50\n\n//     const StyledSlider = styled(Slider)({\n//       margin: `${vMargin}px ${hMargin}px`,\n//       padding: \"5px 5px 5px 5px\",\n//       width: this.props.width - (hMargin),\n//       color: \"#29B5E8\",\n//       marks:{\n//         margin:\"10px 10px 10px 10px\"\n//       }\n//     });\n\n//     // function valueLabelFormat(value:number) {\n//     //   return options.findIndex(options) + 1;\n//     // }\n\n//     function createSteps(labels: string[]): any[] {\n//       return labels.map((label, index) => { return { value: index, label } })\n//     }\n\n//     const options = this.props.args[\"options\"]\n//     const step = this.props.args[\"step\"]\n//     const def = this.props.args[\"default\"]\n//     const min_val = this.props.args[\"min_value\"]\n//     const max_val = this.props.args[\"max_value\"]\n//     return (\n//       <Box sx={{ height: 150 }}>\n//         <StyledSlider \n//           orientation=\"vertical\"\n//           getAriaValueText={valuetext}\n//           defaultValue={def}\n//           aria-labelledby=\"continuous-slider\"\n//           step={step}\n//           min={min_val}\n//           max={max_val}\n//           //value={this.state.currentValue}\n//           valueLabelDisplay=\"on\"\n//           onDragEnter={(value) => {\n//             //this.setState({ currentValue: value })\n//             Streamlit.setComponentValue(value)\n//           }}\n//           disabled={this.props.disabled}\n//           marks={[{ value: Number(min_val) , label: String(min_val) }, { value:Number(max_val) , label: String(max_val)}]}\n//         />\n//       </Box>\n//     )\n\n//   }\n\n// }\n// export default withStreamlitConnection(VerticalSlider)\n\n//import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst VerticalSlider =(props:ComponentProps)=>{\n    \n    \n    const { label, min_value, max_value, default_value, step } = props.args;\n    //const [value, setValue] = useState([default_value]);\n    useEffect(() => Streamlit.setFrameHeight());\n    const handleChange = (event: any, newValue: number | number[]) => {\n      Streamlit.setComponentValue(newValue);\n    };\n    const hMargin = 5\n    const style = {height:\"200px\", \n                    marginLeft:5, \n                    marginRight:5, \n                    marginTop:50, \n                    marginBottom:50, \n                    width: props.width - (hMargin),\n                    color: \"#29B5E8\",\n                    marked:\"False\"\n                  }\n  \n    return (\n      <Box sx={{ height: 150 }}>\n        <Slider\n          min={min_value}\n          step={step}\n          max={max_value}\n          defaultValue={default_value}\n          onChange={handleChange}\n          valueLabelDisplay=\"on\"\n          orientation=\"vertical\"\n          aria-labelledby=\"continuous-slider\"\n          style={style}\n          ThumbComponent=\"span\"\n          marks={[{ value: Number(min_value) , label: String(min_value) }, { value:Number(max_value) , label: String(max_value)}]}\n        />\n      </Box>\n  \n    );\n\n}\nexport default withStreamlitConnection(VerticalSlider);\n\n\n\n\n// export default function NonLinearSlider() {\n//   const [value, setValue] = React.useState<number | number[]>(1);\n\n//   const handleChange = (event: any, newValue: number | number[]) => {\n//     setValue(newValue)\n//     Streamlit.setComponentValue(newValue);\n//   };\n\n//     // const options = strea.args[\"options\"]\n//     // const step = props.args[\"step\"]\n//     // const def = props.args[\"default\"]\n//     // const min_val = props.args[\"min_value\"]\n//     const { label, minValue, maxValue, initialValue } = props.args;\n\n//   return (\n//       <Slider\n//         //value={value}\n//         min={1}\n//         step={1}\n//         max={100}\n//         defaultValue={50}\n//         onChange={handleChange}\n//         valueLabelDisplay=\"on\"\n//         orientation=\"vertical\"\n//         aria-labelledby=\"continuous-slider\"\n//         style={{ height:\"200px\", marginLeft:25, marginRight:25, marginTop:50, marginBottom:50, width: \"100px\",color: \"#29B5E8\",}}\n//         ThumbComponent=\"span\"\n//         marks={[{ value: Number(min_val) , label: String(min_val) }, { value:Number(max_val) , label: String(max_val)}]}\n//       />\n\n//   );\n// }\n\n"],"mappings":";AAAA,SAEEA,SAAS,EAETC,uBAAuB,QAClB,yBAAyB;AAChC,OAAOC,KAAK,IAAwBC,SAAS,QAAQ,OAAO;AAC5D,OAAOC,GAAG,MAAM,uBAAuB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,OAAOC,MAAM,MAAM,0BAA0B;AAE7C,MAAMC,cAAc,GAAGC,KAAoB,IAAG;EAG1C,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,SAAS;IAAEC,aAAa;IAAEC;EAAK,CAAC,GAAGL,KAAK,CAACM,IAAI;EACvE;EACAV,SAAS,CAAC,MAAMH,SAAS,CAACc,cAAc,EAAE,CAAC;EAC3C,MAAMC,YAAY,GAAG,CAACC,KAAU,EAAEC,QAA2B,KAAK;IAChEjB,SAAS,CAACkB,iBAAiB,CAACD,QAAQ,CAAC;EACvC,CAAC;EACD,MAAME,OAAO,GAAG,CAAC;EACjB,MAAMC,KAAK,GAAG;IAACC,MAAM,EAAC,OAAO;IACbC,UAAU,EAAC,CAAC;IACZC,WAAW,EAAC,CAAC;IACbC,SAAS,EAAC,EAAE;IACZC,YAAY,EAAC,EAAE;IACfC,KAAK,EAAEnB,KAAK,CAACmB,KAAK,GAAIP,OAAQ;IAC9BQ,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAC;EACT,CAAC;EAEf,oBACE,oBAAC,GAAG;IAAC,EAAE,EAAE;MAAEP,MAAM,EAAE;IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB,oBAAC,MAAM;IACL,GAAG,EAAEZ,SAAU;IACf,IAAI,EAAEG,IAAK;IACX,GAAG,EAAEF,SAAU;IACf,YAAY,EAAEC,aAAc;IAC5B,QAAQ,EAAEI,YAAa;IACvB,iBAAiB,EAAC,IAAI;IACtB,WAAW,EAAC,UAAU;IACtB,mBAAgB,mBAAmB;IACnC,KAAK,EAAEK,KAAM;IACb,cAAc,EAAC,MAAM;IACrB,KAAK,EAAE,CAAC;MAAES,KAAK,EAAEC,MAAM,CAACrB,SAAS,CAAC;MAAGD,KAAK,EAAEuB,MAAM,CAACtB,SAAS;IAAE,CAAC,EAAE;MAAEoB,KAAK,EAACC,MAAM,CAACpB,SAAS,CAAC;MAAGF,KAAK,EAAEuB,MAAM,CAACrB,SAAS;IAAC,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxH,CACE;AAIZ,CAAC;AACD,eAAeT,uBAAuB,CAACK,cAAc,CAAC;;AAKtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module"}