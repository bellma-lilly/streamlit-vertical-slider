{"ast":null,"code":"var _jsxFileName = \"/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx\";\nimport { Streamlit } from \"streamlit-component-lib\";\n// import React, { ReactNode, useState } from \"react\"\n\n// import Box from '@material-ui/core/Box'\n// import Slider from '@material-ui/core/Slider'\n// import styled from '@material-ui/styles/styled'\n// import { createTheme } from '@material-ui/core/styles'\n// import Typography from '@material-ui/core/Typography' \n// import Grid from '@material-ui/core/Grid';\n\n// function valuetext(value: number) {\n//   return `${value}°C`;\n// }\n\n// class VerticalSlider extends StreamlitComponentBase {\n//   public state = { currentValue: 0 }\n//   public render = (): ReactNode => {\n//     const hMargin = 10\n//     const vMargin = 50\n\n//     const StyledSlider = styled(Slider)({\n//       margin: `${vMargin}px ${hMargin}px`,\n//       padding: \"5px 5px 5px 5px\",\n//       width: this.props.width - (hMargin),\n//       color: \"#29B5E8\",\n//       marks:{\n//         margin:\"10px 10px 10px 10px\"\n//       }\n//     });\n\n//     // function valueLabelFormat(value:number) {\n//     //   return options.findIndex(options) + 1;\n//     // }\n\n//     function createSteps(labels: string[]): any[] {\n//       return labels.map((label, index) => { return { value: index, label } })\n//     }\n\n//     const options = this.props.args[\"options\"]\n//     const step = this.props.args[\"step\"]\n//     const def = this.props.args[\"default\"]\n//     const min_val = this.props.args[\"min_value\"]\n//     const max_val = this.props.args[\"max_value\"]\n//     return (\n//       <Box sx={{ height: 150 }}>\n//         <StyledSlider \n//           orientation=\"vertical\"\n//           getAriaValueText={valuetext}\n//           defaultValue={def}\n//           aria-labelledby=\"continuous-slider\"\n//           step={step}\n//           min={min_val}\n//           max={max_val}\n//           //value={this.state.currentValue}\n//           valueLabelDisplay=\"on\"\n//           onDragEnter={(value) => {\n//             //this.setState({ currentValue: value })\n//             Streamlit.setComponentValue(value)\n//           }}\n//           disabled={this.props.disabled}\n//           marks={[{ value: Number(min_val) , label: String(min_val) }, { value:Number(max_val) , label: String(max_val)}]}\n//         />\n//       </Box>\n//     )\n\n//   }\n\n// }\n// export default withStreamlitConnection(VerticalSlider)\n\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nfunction valueLabelFormat(value) {\n  const [coefficient, exponent] = value.toExponential().split('e').map(item => Number(item));\n  return `${Math.round(coefficient)}e^${exponent}`;\n}\nexport default function NonLinearSlider() {\n  const [value, setValue] = React.useState(1);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    Streamlit.setComponentValue(newValue);\n  };\n\n  // const options = strea.args[\"options\"]\n  // const step = props.args[\"step\"]\n  // const def = props.args[\"default\"]\n  // const min_val = props.args[\"min_value\"]\n  // const max_val = props.args[\"max_value\"]\n\n  return /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    min: 1,\n    step: 1,\n    max: 100\n    //getAriaValueText={valueLabelFormat}\n    //valueLabelFormat={valueLabelFormat}\n    ,\n    onChange: handleChange,\n    valueLabelDisplay: \"on\",\n    orientation: \"horizontal\",\n    \"aria-labelledby\": \"continuous-slider\",\n    style: {\n      margin: \"50px 15px\"\n    },\n    ThumbComponent: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"names":["Streamlit","React","Slider","valueLabelFormat","value","coefficient","exponent","toExponential","split","map","item","Number","Math","round","NonLinearSlider","setValue","useState","handleChange","event","newValue","setComponentValue","margin"],"sources":["/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n// import React, { ReactNode, useState } from \"react\"\n\n\n\n// import Box from '@material-ui/core/Box'\n// import Slider from '@material-ui/core/Slider'\n// import styled from '@material-ui/styles/styled'\n// import { createTheme } from '@material-ui/core/styles'\n// import Typography from '@material-ui/core/Typography' \n// import Grid from '@material-ui/core/Grid';\n\n// function valuetext(value: number) {\n//   return `${value}°C`;\n// }\n\n\n\n// class VerticalSlider extends StreamlitComponentBase {\n//   public state = { currentValue: 0 }\n//   public render = (): ReactNode => {\n//     const hMargin = 10\n//     const vMargin = 50\n\n//     const StyledSlider = styled(Slider)({\n//       margin: `${vMargin}px ${hMargin}px`,\n//       padding: \"5px 5px 5px 5px\",\n//       width: this.props.width - (hMargin),\n//       color: \"#29B5E8\",\n//       marks:{\n//         margin:\"10px 10px 10px 10px\"\n//       }\n//     });\n\n//     // function valueLabelFormat(value:number) {\n//     //   return options.findIndex(options) + 1;\n//     // }\n\n//     function createSteps(labels: string[]): any[] {\n//       return labels.map((label, index) => { return { value: index, label } })\n//     }\n\n//     const options = this.props.args[\"options\"]\n//     const step = this.props.args[\"step\"]\n//     const def = this.props.args[\"default\"]\n//     const min_val = this.props.args[\"min_value\"]\n//     const max_val = this.props.args[\"max_value\"]\n//     return (\n//       <Box sx={{ height: 150 }}>\n//         <StyledSlider \n//           orientation=\"vertical\"\n//           getAriaValueText={valuetext}\n//           defaultValue={def}\n//           aria-labelledby=\"continuous-slider\"\n//           step={step}\n//           min={min_val}\n//           max={max_val}\n//           //value={this.state.currentValue}\n//           valueLabelDisplay=\"on\"\n//           onDragEnter={(value) => {\n//             //this.setState({ currentValue: value })\n//             Streamlit.setComponentValue(value)\n//           }}\n//           disabled={this.props.disabled}\n//           marks={[{ value: Number(min_val) , label: String(min_val) }, { value:Number(max_val) , label: String(max_val)}]}\n//         />\n//       </Box>\n//     )\n\n//   }\n\n// }\n// export default withStreamlitConnection(VerticalSlider)\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nfunction valueLabelFormat(value: number) {\n  const [coefficient, exponent] = value\n    .toExponential()\n    .split('e')\n    .map((item) => Number(item));\n  return `${Math.round(coefficient)}e^${exponent}`;\n}\nexport default function NonLinearSlider() {\n  const [value, setValue] = React.useState<number | number[]>(1);\n\n  const handleChange = (event: any, newValue: number | number[]) => {\n    setValue(newValue)\n    Streamlit.setComponentValue(newValue);\n  };\n\n    // const options = strea.args[\"options\"]\n    // const step = props.args[\"step\"]\n    // const def = props.args[\"default\"]\n    // const min_val = props.args[\"min_value\"]\n    // const max_val = props.args[\"max_value\"]\n\n  return (\n      <Slider\n        value={value}\n        min={1}\n        step={1}\n        max={100}\n        //getAriaValueText={valueLabelFormat}\n        //valueLabelFormat={valueLabelFormat}\n        onChange={handleChange}\n        valueLabelDisplay=\"on\"\n        orientation=\"horizontal\"\n        aria-labelledby=\"continuous-slider\"\n        style={{margin:\"50px 15px\"}}\n        ThumbComponent=\"span\"\n      />\n\n  );\n}\n\n"],"mappings":";AAAA,SACEA,SAAS,QAGJ,yBAAyB;AAChC;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,0BAA0B;AAE7C,SAASC,gBAAgB,CAACC,KAAa,EAAE;EACvC,MAAM,CAACC,WAAW,EAAEC,QAAQ,CAAC,GAAGF,KAAK,CAClCG,aAAa,EAAE,CACfC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,IAAI,IAAKC,MAAM,CAACD,IAAI,CAAC,CAAC;EAC9B,OAAQ,GAAEE,IAAI,CAACC,KAAK,CAACR,WAAW,CAAE,KAAIC,QAAS,EAAC;AAClD;AACA,eAAe,SAASQ,eAAe,GAAG;EACxC,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAoB,CAAC,CAAC;EAE9D,MAAMC,YAAY,GAAG,CAACC,KAAU,EAAEC,QAA2B,KAAK;IAChEJ,QAAQ,CAACI,QAAQ,CAAC;IAClBnB,SAAS,CAACoB,iBAAiB,CAACD,QAAQ,CAAC;EACvC,CAAC;;EAEC;EACA;EACA;EACA;EACA;;EAEF,oBACI,oBAAC,MAAM;IACL,KAAK,EAAEf,KAAM;IACb,GAAG,EAAE,CAAE;IACP,IAAI,EAAE,CAAE;IACR,GAAG,EAAE;IACL;IACA;IAAA;IACA,QAAQ,EAAEa,YAAa;IACvB,iBAAiB,EAAC,IAAI;IACtB,WAAW,EAAC,YAAY;IACxB,mBAAgB,mBAAmB;IACnC,KAAK,EAAE;MAACI,MAAM,EAAC;IAAW,CAAE;IAC5B,cAAc,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACrB;AAGR"},"metadata":{},"sourceType":"module"}