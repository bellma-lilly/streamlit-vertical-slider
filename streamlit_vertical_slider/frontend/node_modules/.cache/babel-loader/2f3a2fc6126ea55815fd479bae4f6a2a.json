{"ast":null,"code":"var _jsxFileName = \"/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx\";\nimport React from \"react\";\nimport Slider from '@material-ui/core/Slider';\n// function valuetext(value: number) {\n//   return `${value}°C`;\n// }\n\n// const hMargin = 10\n// const vMargin = 50 \n// const StyledSlider = styled(Slider)({\n//   margin:`${vMargin}px ${hMargin}px`,\n//   padding: \"5px 5px 5px 5px\",\n//   color:\"#29B5E8\"\n//   });\n\n// function createSteps(labels:string[]): any[] {\n//   return labels.map((label,index)=>{return{value:index,label}})\n// }\n\n// // const options = this.props.args[\"options\"]\n// // const step = this.props.args[\"step\"]\n// // let default_value = this.props.args[\"default\"]\n\n// const verticalSlider = (props: ComponentProps) => {\n//   const { minValue, maxValue, options } = props.args;\n//   //const [value, setValue] = useState([0, 10]);\n\n//   return (\n//     <Box sx={{ height: 300 }}>\n//       <Slider\n//         orientation=\"vertical\"\n//         getAriaValueText={valuetext}\n//         //step={step}\n//         //defaultValue={default_value}\n//         //max ={options.length - 1}\n//         valueLabelDisplay=\"auto\"\n//         onChangeCommitted={(event, value) => {\n//           Streamlit.setComponentValue(options[Number(value)])\n//         }}\n\n//         disabled={props.disabled}\n//         marks={createSteps(options)}\n//         //style ={{width: props.width-(hMargin), height:\"300px\"}}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default withStreamlitConnection(verticalSlider)\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\nconst marks = [{\n  value: 0,\n  label: '0°C'\n}, {\n  value: 20,\n  label: '20°C'\n}, {\n  value: 37,\n  label: '37°C'\n}, {\n  value: 100,\n  label: '100°C'\n}];\nexport default function VerticalSlider() {\n  return /*#__PURE__*/React.createElement(Slider, {\n    getAriaLabel: () => 'Temperature',\n    orientation: \"vertical\",\n    getAriaValueText: valuetext,\n    defaultValue: [20, 37],\n    valueLabelDisplay: \"auto\",\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"names":["React","Slider","valuetext","value","marks","label","VerticalSlider"],"sources":["/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useEffect, useState } from \"react\"\n\n\nimport Box from '@material-ui/core/Box'\nimport Slider from '@material-ui/core/Slider'\nimport styled from '@material-ui/styles/styled'\n\n\n\n// function valuetext(value: number) {\n//   return `${value}°C`;\n// }\n\n\n\n\n// const hMargin = 10\n// const vMargin = 50 \n// const StyledSlider = styled(Slider)({\n//   margin:`${vMargin}px ${hMargin}px`,\n//   padding: \"5px 5px 5px 5px\",\n//   color:\"#29B5E8\"\n//   });\n\n// function createSteps(labels:string[]): any[] {\n//   return labels.map((label,index)=>{return{value:index,label}})\n// }\n\n// // const options = this.props.args[\"options\"]\n// // const step = this.props.args[\"step\"]\n// // let default_value = this.props.args[\"default\"]\n\n// const verticalSlider = (props: ComponentProps) => {\n//   const { minValue, maxValue, options } = props.args;\n//   //const [value, setValue] = useState([0, 10]);\n\n\n//   return (\n//     <Box sx={{ height: 300 }}>\n//       <Slider\n//         orientation=\"vertical\"\n//         getAriaValueText={valuetext}\n//         //step={step}\n//         //defaultValue={default_value}\n//         //max ={options.length - 1}\n//         valueLabelDisplay=\"auto\"\n//         onChangeCommitted={(event, value) => {\n//           Streamlit.setComponentValue(options[Number(value)])\n//         }}\n        \n//         disabled={props.disabled}\n//         marks={createSteps(options)}\n//         //style ={{width: props.width-(hMargin), height:\"300px\"}}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default withStreamlitConnection(verticalSlider)\n\n\nfunction valuetext(value:number) {\n  return `${value}°C`;\n}\n\nconst marks = [\n  {\n    value: 0,\n    label: '0°C',\n  },\n  {\n    value: 20,\n    label: '20°C',\n  },\n  {\n    value: 37,\n    label: '37°C',\n  },\n  {\n    value: 100,\n    label: '100°C',\n  },\n];\n\nexport default function VerticalSlider() {\n  return (\n\n      <Slider\n        getAriaLabel={() => 'Temperature'}\n        orientation=\"vertical\"\n        getAriaValueText={valuetext}\n        defaultValue={[20, 37]}\n        valueLabelDisplay=\"auto\"\n        marks={marks}\n      />\n  );\n}\n"],"mappings":";AAMA,OAAOA,KAAK,MAA0C,OAAO;AAI7D,OAAOC,MAAM,MAAM,0BAA0B;AAK7C;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASC,SAAS,CAACC,KAAY,EAAE;EAC/B,OAAQ,GAAEA,KAAM,IAAG;AACrB;AAEA,MAAMC,KAAK,GAAG,CACZ;EACED,KAAK,EAAE,CAAC;EACRE,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,EAAE;EACTE,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,EAAE;EACTE,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,GAAG;EACVE,KAAK,EAAE;AACT,CAAC,CACF;AAED,eAAe,SAASC,cAAc,GAAG;EACvC,oBAEI,oBAAC,MAAM;IACL,YAAY,EAAE,MAAM,aAAc;IAClC,WAAW,EAAC,UAAU;IACtB,gBAAgB,EAAEJ,SAAU;IAC5B,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;IACvB,iBAAiB,EAAC,MAAM;IACxB,KAAK,EAAEE,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACb;AAER"},"metadata":{},"sourceType":"module"}