{"ast":null,"code":"var _jsxFileName = \"/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx\";\nimport React from \"react\";\nimport Box from '@material-ui/core/Box';\nimport Slider from '@material-ui/core/Slider';\n// function valuetext(value: number) {\n//   return `${value}°C`;\n// }\n\n// const hMargin = 10\n// const vMargin = 50 \n// const StyledSlider = styled(Slider)({\n//   margin:`${vMargin}px ${hMargin}px`,\n//   padding: \"5px 5px 5px 5px\",\n//   color:\"#29B5E8\"\n//   });\n\n// function createSteps(labels:string[]): any[] {\n//   return labels.map((label,index)=>{return{value:index,label}})\n// }\n\n// // const options = this.props.args[\"options\"]\n// // const step = this.props.args[\"step\"]\n// // let default_value = this.props.args[\"default\"]\n\n// const verticalSlider = (props: ComponentProps) => {\n//   const { minValue, maxValue, options } = props.args;\n//   //const [value, setValue] = useState([0, 10]);\n\n//   return (\n//     <Box sx={{ height: 300 }}>\n//       <Slider\n//         orientation=\"vertical\"\n//         getAriaValueText={valuetext}\n//         //step={step}\n//         //defaultValue={default_value}\n//         //max ={options.length - 1}\n//         valueLabelDisplay=\"auto\"\n//         onChangeCommitted={(event, value) => {\n//           Streamlit.setComponentValue(options[Number(value)])\n//         }}\n\n//         disabled={props.disabled}\n//         marks={createSteps(options)}\n//         //style ={{width: props.width-(hMargin), height:\"300px\"}}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default withStreamlitConnection(verticalSlider)\n\nexport default function VerticalSlider() {\n  function preventHorizontalKeyboardNavigation(event) {\n    if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n      event.preventDefault();\n    }\n  }\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    sx: {\n      '& input[type=\"range\"]': {\n        WebkitAppearance: 'slider-vertical'\n      }\n    },\n    orientation: \"vertical\",\n    defaultValue: 30,\n    \"aria-label\": \"Temperature\",\n    valueLabelDisplay: \"auto\",\n    onKeyDown: preventHorizontalKeyboardNavigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","Box","Slider","VerticalSlider","preventHorizontalKeyboardNavigation","event","key","preventDefault","height","WebkitAppearance"],"sources":["/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useEffect, useState } from \"react\"\n\n\n\nimport Box from '@material-ui/core/Box'\nimport Slider from '@material-ui/core/Slider'\nimport styled from '@material-ui/styles/styled'\n\n\n\n// function valuetext(value: number) {\n//   return `${value}°C`;\n// }\n\n\n\n\n// const hMargin = 10\n// const vMargin = 50 \n// const StyledSlider = styled(Slider)({\n//   margin:`${vMargin}px ${hMargin}px`,\n//   padding: \"5px 5px 5px 5px\",\n//   color:\"#29B5E8\"\n//   });\n\n// function createSteps(labels:string[]): any[] {\n//   return labels.map((label,index)=>{return{value:index,label}})\n// }\n\n// // const options = this.props.args[\"options\"]\n// // const step = this.props.args[\"step\"]\n// // let default_value = this.props.args[\"default\"]\n\n// const verticalSlider = (props: ComponentProps) => {\n//   const { minValue, maxValue, options } = props.args;\n//   //const [value, setValue] = useState([0, 10]);\n\n\n//   return (\n//     <Box sx={{ height: 300 }}>\n//       <Slider\n//         orientation=\"vertical\"\n//         getAriaValueText={valuetext}\n//         //step={step}\n//         //defaultValue={default_value}\n//         //max ={options.length - 1}\n//         valueLabelDisplay=\"auto\"\n//         onChangeCommitted={(event, value) => {\n//           Streamlit.setComponentValue(options[Number(value)])\n//         }}\n        \n//         disabled={props.disabled}\n//         marks={createSteps(options)}\n//         //style ={{width: props.width-(hMargin), height:\"300px\"}}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default withStreamlitConnection(verticalSlider)\n\nexport default function VerticalSlider() {\n  function preventHorizontalKeyboardNavigation(event) {\n    if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n      event.preventDefault();\n    }\n  }\n\n  return (\n    <Box sx={{ height: 300 }}>\n      <Slider\n        sx={{\n          '& input[type=\"range\"]': {\n            WebkitAppearance: 'slider-vertical',\n          },\n        }}\n        orientation=\"vertical\"\n        defaultValue={30}\n        aria-label=\"Temperature\"\n        valueLabelDisplay=\"auto\"\n        onKeyDown={preventHorizontalKeyboardNavigation}\n      />\n    </Box>\n  );\n}\n"],"mappings":";AAMA,OAAOA,KAAK,MAA0C,OAAO;AAI7D,OAAOC,GAAG,MAAM,uBAAuB;AACvC,OAAOC,MAAM,MAAM,0BAA0B;AAK7C;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,SAASC,cAAc,GAAG;EACvC,SAASC,mCAAmC,CAACC,KAAK,EAAE;IAClD,IAAIA,KAAK,CAACC,GAAG,KAAK,WAAW,IAAID,KAAK,CAACC,GAAG,KAAK,YAAY,EAAE;MAC3DD,KAAK,CAACE,cAAc,EAAE;IACxB;EACF;EAEA,oBACE,oBAAC,GAAG;IAAC,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB,oBAAC,MAAM;IACL,EAAE,EAAE;MACF,uBAAuB,EAAE;QACvBC,gBAAgB,EAAE;MACpB;IACF,CAAE;IACF,WAAW,EAAC,UAAU;IACtB,YAAY,EAAE,EAAG;IACjB,cAAW,aAAa;IACxB,iBAAiB,EAAC,MAAM;IACxB,SAAS,EAAEL,mCAAoC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC/C,CACE;AAEV"},"metadata":{},"sourceType":"module"}