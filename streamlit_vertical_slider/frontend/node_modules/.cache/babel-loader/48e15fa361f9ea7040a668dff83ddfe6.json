{"ast":null,"code":"var _jsxFileName = \"/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useState } from \"react\";\nimport Slider from '@material-ui/core/Slider';\nfunction valuetext(value) {\n  return `${value}°C`;\n}\nclass VerticalSlider extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n    this.render = () => {\n      //   const hMargin = 10\n      //   const vMargin = 50 \n      //   const StyledSlider = styled(Slider)({\n      //     margin:`${vMargin}px ${hMargin}px`,\n      //     padding: \"5px 5px 5px 5px\",\n      //     width:this.props.width-(hMargin),\n      //     color:\"#29B5E8\"\n      //     });\n\n      //   function valueLabelFormat(value:number) {\n      //     return options.findIndex(options) + 1;\n      //   }\n      //   //const [val, setVal] = useState(0);\n      //   // const recordChange = (newValue) => {\n      //   //   setVal(newValue)\n      //   // };\n      //   const options = this.props.args[\"options\"]\n      //   return (\n      //     <Box sx={{ height: 200, width:200}}>\n      //     <StyledSlider\n      //       aria-label=\"Restricted values\"\n      //       defaultValue={0}\n      //       orientation=\"vertical\"\n      //       getAriaValueText={valuetext}\n      //       step={1}\n      //       max={10}\n      //       // value = {val}\n      //       valueLabelDisplay=\"auto\"\n      //       // onChange={recordChange}\n      //       onChangeCommitted={(event,value) => {\n      //         const selectedOption = options[Number(value)]\n      //         Streamlit.setComponentValue(selectedOption)\n      //       }}\n      //       disabled= {this.props.disabled}\n      //       marks={options}\n\n      //     />\n      //   </Box>\n      //   )\n      // }\n      const SliderA = () => {\n        const [activity, setActivity] = useState(0);\n        const handleChange = (event, newValue) => {\n          setActivity(newValue);\n        };\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          id: \"discrete-slider\",\n          gutterBottom: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, \"A\"), /*#__PURE__*/React.createElement(Slider, {\n          value: activity,\n          \"aria-labelledby\": \"discrete-slider\",\n          valueLabelDisplay: \"auto\",\n          step: 10,\n          marks: true,\n          min: 10,\n          max: 120,\n          name: \"a\",\n          onChange: handleChange,\n          style: {\n            marginBottom: \"20px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }\n        }));\n      };\n    };\n  }\n}\nexport default withStreamlitConnection(VerticalSlider);","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","React","useState","Slider","valuetext","value","VerticalSlider","render","SliderA","activity","setActivity","handleChange","event","newValue","marginBottom"],"sources":["/Users/cserrano/Documents/Streamlit-Local/verticalSlider/streamlit_vertical_slider/frontend/src/streamlit_vertical_slider.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useState } from \"react\"\nimport Box from '@material-ui/core/Box'\nimport Slider from '@material-ui/core/Slider'\nimport styled from '@material-ui/styles/styled'\nimport { setConstantValue } from \"typescript\"\n\n\n\n\n\n\nfunction valuetext(value:number) {\n  return `${value}°C`;\n}\n\n\nclass VerticalSlider extends StreamlitComponentBase{\n\n  public render = (): ReactNode => {\n  //   const hMargin = 10\n  //   const vMargin = 50 \n  //   const StyledSlider = styled(Slider)({\n  //     margin:`${vMargin}px ${hMargin}px`,\n  //     padding: \"5px 5px 5px 5px\",\n  //     width:this.props.width-(hMargin),\n  //     color:\"#29B5E8\"\n  //     });\n\n  //   function valueLabelFormat(value:number) {\n  //     return options.findIndex(options) + 1;\n  //   }\n  //   //const [val, setVal] = useState(0);\n  //   // const recordChange = (newValue) => {\n  //   //   setVal(newValue)\n  //   // };\n  //   const options = this.props.args[\"options\"]\n  //   return (\n  //     <Box sx={{ height: 200, width:200}}>\n  //     <StyledSlider\n  //       aria-label=\"Restricted values\"\n  //       defaultValue={0}\n  //       orientation=\"vertical\"\n  //       getAriaValueText={valuetext}\n  //       step={1}\n  //       max={10}\n  //       // value = {val}\n  //       valueLabelDisplay=\"auto\"\n  //       // onChange={recordChange}\n  //       onChangeCommitted={(event,value) => {\n  //         const selectedOption = options[Number(value)]\n  //         Streamlit.setComponentValue(selectedOption)\n  //       }}\n  //       disabled= {this.props.disabled}\n  //       marks={options}\n        \n  //     />\n  //   </Box>\n  //   )\n  // }\n  const SliderA = () => {\n    const [activity, setActivity] = useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setActivity(newValue);\n    };\n  \n    return (\n      <React.Fragment>\n        <Typography id=\"discrete-slider\" gutterBottom>\n          A\n        </Typography>\n  \n        <Slider\n          value={activity}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          step={10}\n          marks\n          min={10}\n          max={120}\n          name=\"a\"\n          onChange={handleChange}\n          style={{ marginBottom: \"20px\" }}\n        />\n      </React.Fragment>\n    );\n  }\n  };\n\n} \n\n\n\nexport default withStreamlitConnection(VerticalSlider)"],"mappings":";AAAA,SAEEA,sBAAsB,EACtBC,uBAAuB,QAClB,yBAAyB;AAChC,OAAOC,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,0BAA0B;AAS7C,SAASC,SAAS,CAACC,KAAY,EAAE;EAC/B,OAAQ,GAAEA,KAAM,IAAG;AACrB;AAGA,MAAMC,cAAc,SAASP,sBAAsB;EAAA;IAAA;IAAA,KAE1CQ,MAAM,GAAG,MAAiB;MACjC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA,MAAMC,OAAO,GAAG,MAAM;QACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;QAE3C,MAAMS,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;UACxCH,WAAW,CAACG,QAAQ,CAAC;QACvB,CAAC;QAED,oBACE,oBAAC,KAAK,CAAC,QAAQ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACb,oBAAC,UAAU;UAAC,EAAE,EAAC,iBAAiB;UAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,OAEhC,eAEb,oBAAC,MAAM;UACL,KAAK,EAAEJ,QAAS;UAChB,mBAAgB,iBAAiB;UACjC,iBAAiB,EAAC,MAAM;UACxB,IAAI,EAAE,EAAG;UACT,KAAK;UACL,GAAG,EAAE,EAAG;UACR,GAAG,EAAE,GAAI;UACT,IAAI,EAAC,GAAG;UACR,QAAQ,EAAEE,YAAa;UACvB,KAAK,EAAE;YAAEG,YAAY,EAAE;UAAO,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAChC,CACa;MAErB,CAAC;IACD,CAAC;EAAA;AAEH;AAIA,eAAed,uBAAuB,CAACM,cAAc,CAAC"},"metadata":{},"sourceType":"module"}